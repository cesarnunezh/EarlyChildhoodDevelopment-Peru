qi478e6 == 2 & qi478f6 == 2 ~ 0,
TRUE ~ NA),
g4h4conv = case_when(qi478h4 == 1 | qi478g4 == 1 ~ 1,
qi478h4 == 2 | qi478g4 == 2 ~ 0,
TRUE ~ NA),
f1camina_solo = case_when(qi478f1 == 5 | qi478f1 == 6 ~ 1,
qi478f1 == 1 | qi478f1 == 2| qi478f1 == 3 | qi478f1 == 4 ~ 0,
TRUE ~ NA),
e1camina_solo = case_when(qi478e1 == 5 | qi478e1 == 6 ~ 1, #SE PONE DE PIE SIN AGARRARSE DE NADA y CAMINA SOLA /O CON SOLTURA
qi478e1 == 1 | qi478e1 == 2| qi478e1 == 3 | qi478e1 == 4 ~ 0,
TRUE ~ NA)) %>%
mutate(desInfCom = rowSums(select(., starts_with("r4_")), na.rm = TRUE),
indEntorno2 = rowSums(select(., starts_with("f2")), na.rm = TRUE))
##Calculo de variables
baseNinosDITENDES <- baseNinosDITENDES %>%
mutate( desInfEmo = case_when(qi478a == 0 & (qi478 >= 24 & qi478 <= 36) ~ case_when(qi478h9 == 1 ~ 0,
qi478h9 == 2 ~ 1,
qi478h10 == 1 ~ 0,
qi478h10 == 2 ~ 1,
qi478h10 == 3 ~ 0,
qi478h11 == 1 ~ 0,
qi478h11 == 2 ~ 1,
TRUE ~ NA),
qi478a == 0 & (qi478 >= 37 & qi478 <= 54) ~ case_when(qi478i5 == 1 ~ 0,
qi478i5 == 2 ~ 1,
qi478i6 == 1 ~ 0,
qi478i6 == 2 ~ 1,
qi478i6 == 3 ~ 0,
qi478i7 == 1 ~ 0,
qi478i7 == 2 ~ 1,
TRUE ~ NA),
qi478a == 0 & (qi478 >= 55 & qi478 <= 71) ~ case_when(qi478j5 == 1 ~ 0,
qi478j5 == 2 ~ 1,
qi478j6 == 1 ~ 0,
qi478j6 == 2 ~ 1,
qi478j6 == 3 ~ 0,
qi478j7 == 1 ~ 0,
qi478j7 == 2 ~ 1,
TRUE ~ NA),
TRUE ~ NA),
r2conv = case_when(r2 == 0 | r2 == 1 | r2 == 2 ~ 0,## convetir a dummy variables categoricas de apego seguro
r2 == 3 ~ 1,
TRUE ~ NA),
r5conv = case_when(r4_9_12m == 1 | r4_13_18m == 1 | r4_19_23m == 1 | r4_24_36m == 1 ~ 1,
r4_9_12m == 0 | r4_13_18m == 0 | r4_19_23m == 0 | r4_24_36m == 0 ~ 0,
TRUE ~ NA),
h5conv = case_when(qi478h5 == 1 ~ 1,
qi478h5 == 2 ~ 0,
TRUE ~ NA),
h6conv = case_when(qi478h6 == 1 ~ 1,
qi478h6 == 2 ~ 0,
TRUE ~ NA),
h7conv = case_when(qi478h7 == 1 ~ 1,
qi478h7 == 2 ~ 0,
TRUE ~ NA),
h567 = case_when(qi478a == 0 & (qi478 >= 24 & qi478 <= 36) ~ h5conv + h6conv + h7conv,
TRUE ~ NA),
desInfJue = case_when(h567 %in% 0:2 ~ 0,
h567 == 3 ~ 1,
TRUE ~ NA),
i1conv = case_when(qi478i1 == 1 | qi478i1 == 2 | qi478i1 == 3 | qi478i1 == 4  ~ 0, ##Dibujo a detalles
qi478i1 == 5 ~ 1,
TRUE ~ NA),
r7conv = case_when(desInfJue == 1 | i1conv == 1 ~ 1,
desInfJue == 0 | i1conv == 0 ~ 0,
TRUE ~ NA),
r4conv = case_when(e1camina_solo == 1 | f1camina_solo = 1 ~ 1,
group_by(qi478) %>%
mutate(
porcentaje_emociones = mean(desInfEmo, na.rm = TRUE) * 100,
n = n(),
seEMO = sqrt((porcentaje_emociones / 100) * (1 - (porcentaje_emociones / 100)) / n) * 100,
lowerEMO = porcentaje_emociones - 1.96 * seEMO,
upperEMO = porcentaje_emociones + 1.96 * seEMO,
porcentaje_apego = mean(r2conv, na.rm = TRUE) * 100,
n_apego = sum(!is.na(r2conv) & qi478a == 0 & (qi478 >= 9 & qi478 <= 12)),
seAPE = sqrt((porcentaje_apego / 100) * (1 - (porcentaje_apego / 100)) / n_apego) * 100,
lowerAPE = porcentaje_apego - 1.96 * seAPE,
upperAPE = porcentaje_apego + 1.96 * seAPE,
porcentaje_com = mean(r5conv, na.rm = TRUE) * 100,
n_COM = sum(!is.na(r5conv) & qi478a == 0 & (qi478 >= 9 & qi478 <= 36)),
seCOM = sqrt((porcentaje_com  / 100) * (1 - (porcentaje_com  / 100)) / n_COM) * 100,
lowerCOM = porcentaje_com  - 1.96 * seCOM,
upperCOM = porcentaje_com + 1.96 * seCOM,
porcentaje_fun= mean(r7conv, na.rm = TRUE) * 100,
n_FUN = sum(!is.na(r7conv) & qi478a == 0 & (qi478 >= 24 & qi478 <= 55)),
seFUN = sqrt((porcentaje_fun  / 100) * (1 - (porcentaje_fun  / 100)) / n_FUN) * 100,
lowerFUN = porcentaje_fun  - 1.96 * seFUN,
upperFUN = porcentaje_fun + 1.96 * seFUN,
porcentaje_cam= mean(r4conv, na.rm = TRUE) * 100,
n_CAM = sum(!is.na(r4conv) & qi478a == 0 & (qi478 >= 9 & qi478 <= 18)),
seCAM = sqrt((porcentaje_cam  / 100) * (1 - (porcentaje_cam  / 100)) / n_CAM) * 100,
lowerCAM = porcentaje_fun  - 1.96 * seCAM,
upperCAM = porcentaje_fun + 1.96 * seCAM,
) %>%
ungroup()
table(baseNinosDITENDES$qi478)
##Calculo de variables
baseNinosDITENDES <- baseNinosDITENDES %>%
mutate( desInfEmo = case_when(qi478a == 0 & (qi478 >= 24 & qi478 <= 36) ~ case_when(qi478h9 == 1 ~ 0,
qi478h9 == 2 ~ 1,
qi478h10 == 1 ~ 0,
qi478h10 == 2 ~ 1,
qi478h10 == 3 ~ 0,
qi478h11 == 1 ~ 0,
qi478h11 == 2 ~ 1,
TRUE ~ NA),
qi478a == 0 & (qi478 >= 37 & qi478 <= 54) ~ case_when(qi478i5 == 1 ~ 0,
qi478i5 == 2 ~ 1,
qi478i6 == 1 ~ 0,
qi478i6 == 2 ~ 1,
qi478i6 == 3 ~ 0,
qi478i7 == 1 ~ 0,
qi478i7 == 2 ~ 1,
TRUE ~ NA),
qi478a == 0 & (qi478 >= 55 & qi478 <= 71) ~ case_when(qi478j5 == 1 ~ 0,
qi478j5 == 2 ~ 1,
qi478j6 == 1 ~ 0,
qi478j6 == 2 ~ 1,
qi478j6 == 3 ~ 0,
qi478j7 == 1 ~ 0,
qi478j7 == 2 ~ 1,
TRUE ~ NA),
TRUE ~ NA),
r2conv = case_when(r2 == 0 | r2 == 1 | r2 == 2 ~ 0,## convetir a dummy variables categoricas de apego seguro
r2 == 3 ~ 1,
TRUE ~ NA),
r5conv = case_when(r4_9_12m == 1 | r4_13_18m == 1 | r4_19_23m == 1 | r4_24_36m == 1 ~ 1,
r4_9_12m == 0 | r4_13_18m == 0 | r4_19_23m == 0 | r4_24_36m == 0 ~ 0,
TRUE ~ NA),
h5conv = case_when(qi478h5 == 1 ~ 1,
qi478h5 == 2 ~ 0,
TRUE ~ NA),
h6conv = case_when(qi478h6 == 1 ~ 1,
qi478h6 == 2 ~ 0,
TRUE ~ NA),
h7conv = case_when(qi478h7 == 1 ~ 1,
qi478h7 == 2 ~ 0,
TRUE ~ NA),
h567 = case_when(qi478a == 0 & (qi478 >= 24 & qi478 <= 36) ~ h5conv + h6conv + h7conv,
TRUE ~ NA),
desInfJue = case_when(h567 %in% 0:2 ~ 0,
h567 == 3 ~ 1,
TRUE ~ NA),
i1conv = case_when(qi478i1 == 1 | qi478i1 == 2 | qi478i1 == 3 | qi478i1 == 4  ~ 0, ##Dibujo a detalles
qi478i1 == 5 ~ 1,
TRUE ~ NA),
r7conv = case_when(desInfJue == 1 | i1conv == 1 ~ 1,
desInfJue == 0 | i1conv == 0 ~ 0,
TRUE ~ NA),
r4conv = case_when(e1camina_solo == 1 | f1camina_solo == 1 ~ 1,
e1camina_solo == 0 | f1camina_solo == 1 ~ 0,
TRUE ~ NA))
group_by(qi478) %>%
mutate(
porcentaje_emociones = mean(desInfEmo, na.rm = TRUE) * 100,
n = n(),
seEMO = sqrt((porcentaje_emociones / 100) * (1 - (porcentaje_emociones / 100)) / n) * 100,
lowerEMO = porcentaje_emociones - 1.96 * seEMO,
upperEMO = porcentaje_emociones + 1.96 * seEMO,
porcentaje_apego = mean(r2conv, na.rm = TRUE) * 100,
n_apego = sum(!is.na(r2conv) & qi478a == 0 & (qi478 >= 9 & qi478 <= 12)),
seAPE = sqrt((porcentaje_apego / 100) * (1 - (porcentaje_apego / 100)) / n_apego) * 100,
lowerAPE = porcentaje_apego - 1.96 * seAPE,
upperAPE = porcentaje_apego + 1.96 * seAPE,
porcentaje_com = mean(r5conv, na.rm = TRUE) * 100,
n_COM = sum(!is.na(r5conv) & qi478a == 0 & (qi478 >= 9 & qi478 <= 36)),
seCOM = sqrt((porcentaje_com  / 100) * (1 - (porcentaje_com  / 100)) / n_COM) * 100,
lowerCOM = porcentaje_com  - 1.96 * seCOM,
upperCOM = porcentaje_com + 1.96 * seCOM,
porcentaje_fun= mean(r7conv, na.rm = TRUE) * 100,
n_FUN = sum(!is.na(r7conv) & qi478a == 0 & (qi478 >= 24 & qi478 <= 55)),
seFUN = sqrt((porcentaje_fun  / 100) * (1 - (porcentaje_fun  / 100)) / n_FUN) * 100,
lowerFUN = porcentaje_fun  - 1.96 * seFUN,
upperFUN = porcentaje_fun + 1.96 * seFUN,
porcentaje_cam= mean(r4conv, na.rm = TRUE) * 100,
n_CAM = sum(!is.na(r4conv) & qi478a == 0 & (qi478 >= 9 & qi478 <= 18)),
seCAM = sqrt((porcentaje_cam  / 100) * (1 - (porcentaje_cam  / 100)) / n_CAM) * 100,
lowerCAM = porcentaje_fun  - 1.96 * seCAM,
upperCAM = porcentaje_fun + 1.96 * seCAM,
) %>%
ungroup()
baseNinosDITENDES <- baseNinosDITENDES %>%
mutate( desInfEmo = case_when(qi478a == 0 & (qi478 >= 24 & qi478 <= 36) ~ case_when(qi478h9 == 1 ~ 0,
qi478h9 == 2 ~ 1,
qi478h10 == 1 ~ 0,
qi478h10 == 2 ~ 1,
qi478h10 == 3 ~ 0,
qi478h11 == 1 ~ 0,
qi478h11 == 2 ~ 1,
TRUE ~ NA),
qi478a == 0 & (qi478 >= 37 & qi478 <= 54) ~ case_when(qi478i5 == 1 ~ 0,
qi478i5 == 2 ~ 1,
qi478i6 == 1 ~ 0,
qi478i6 == 2 ~ 1,
qi478i6 == 3 ~ 0,
qi478i7 == 1 ~ 0,
qi478i7 == 2 ~ 1,
TRUE ~ NA),
qi478a == 0 & (qi478 >= 55 & qi478 <= 71) ~ case_when(qi478j5 == 1 ~ 0,
qi478j5 == 2 ~ 1,
qi478j6 == 1 ~ 0,
qi478j6 == 2 ~ 1,
qi478j6 == 3 ~ 0,
qi478j7 == 1 ~ 0,
qi478j7 == 2 ~ 1,
TRUE ~ NA),
TRUE ~ NA),
r2conv = case_when(r2 == 0 | r2 == 1 | r2 == 2 ~ 0,## convetir a dummy variables categoricas de apego seguro
r2 == 3 ~ 1,
TRUE ~ NA),
r5conv = case_when(r4_9_12m == 1 | r4_13_18m == 1 | r4_19_23m == 1 | r4_24_36m == 1 ~ 1,
r4_9_12m == 0 | r4_13_18m == 0 | r4_19_23m == 0 | r4_24_36m == 0 ~ 0,
TRUE ~ NA),
h5conv = case_when(qi478h5 == 1 ~ 1,
qi478h5 == 2 ~ 0,
TRUE ~ NA),
h6conv = case_when(qi478h6 == 1 ~ 1,
qi478h6 == 2 ~ 0,
TRUE ~ NA),
h7conv = case_when(qi478h7 == 1 ~ 1,
qi478h7 == 2 ~ 0,
TRUE ~ NA),
h567 = case_when(qi478a == 0 & (qi478 >= 24 & qi478 <= 36) ~ h5conv + h6conv + h7conv,
TRUE ~ NA),
desInfJue = case_when(h567 %in% 0:2 ~ 0,
h567 == 3 ~ 1,
TRUE ~ NA),
i1conv = case_when(qi478i1 == 1 | qi478i1 == 2 | qi478i1 == 3 | qi478i1 == 4  ~ 0, ##Dibujo a detalles
qi478i1 == 5 ~ 1,
TRUE ~ NA),
r7conv = case_when(desInfJue == 1 | i1conv == 1 ~ 1,
desInfJue == 0 | i1conv == 0 ~ 0,
TRUE ~ NA),
r4conv = case_when(e1camina_solo == 1 | f1camina_solo == 1 ~ 1,
e1camina_solo == 0 | f1camina_solo == 1 ~ 0,
TRUE ~ NA))  %>%
group_by(qi478) %>%
mutate(
porcentaje_emociones = mean(desInfEmo, na.rm = TRUE) * 100,
n = n(),
seEMO = sqrt((porcentaje_emociones / 100) * (1 - (porcentaje_emociones / 100)) / n) * 100,
lowerEMO = porcentaje_emociones - 1.96 * seEMO,
upperEMO = porcentaje_emociones + 1.96 * seEMO,
porcentaje_apego = mean(r2conv, na.rm = TRUE) * 100,
n_apego = sum(!is.na(r2conv) & qi478a == 0 & (qi478 >= 9 & qi478 <= 12)),
seAPE = sqrt((porcentaje_apego / 100) * (1 - (porcentaje_apego / 100)) / n_apego) * 100,
lowerAPE = porcentaje_apego - 1.96 * seAPE,
upperAPE = porcentaje_apego + 1.96 * seAPE,
porcentaje_com = mean(r5conv, na.rm = TRUE) * 100,
n_COM = sum(!is.na(r5conv) & qi478a == 0 & (qi478 >= 9 & qi478 <= 36)),
seCOM = sqrt((porcentaje_com  / 100) * (1 - (porcentaje_com  / 100)) / n_COM) * 100,
lowerCOM = porcentaje_com  - 1.96 * seCOM,
upperCOM = porcentaje_com + 1.96 * seCOM,
porcentaje_fun= mean(r7conv, na.rm = TRUE) * 100,
n_FUN = sum(!is.na(r7conv) & qi478a == 0 & (qi478 >= 24 & qi478 <= 55)),
seFUN = sqrt((porcentaje_fun  / 100) * (1 - (porcentaje_fun  / 100)) / n_FUN) * 100,
lowerFUN = porcentaje_fun  - 1.96 * seFUN,
upperFUN = porcentaje_fun + 1.96 * seFUN,
porcentaje_cam= mean(r4conv, na.rm = TRUE) * 100,
n_CAM = sum(!is.na(r4conv) & qi478a == 0 & (qi478 >= 9 & qi478 <= 18)),
seCAM = sqrt((porcentaje_cam  / 100) * (1 - (porcentaje_cam  / 100)) / n_CAM) * 100,
lowerCAM = porcentaje_fun  - 1.96 * seCAM,
upperCAM = porcentaje_fun + 1.96 * seCAM,
) %>%
ungroup()
CAM <- ggplot(data = baseNinosDITENDES, aes(x = qi478, y = porcentaje_cam))+
geom_point(size = 1, color = "black") +
geom_smooth(method = "loess", se = FALSE, color = "red", size = 1) +  # Línea suavizada
geom_errorbar(aes(ymin = lowerCAM , ymax = uppperCAM  ), width = 0.2, color = "black") +
labs(
title = "Camina solo. Perú 2019-2023",
x = "Edad en meses",
y = "95% CI Marcha estable y autonóma"
) +
theme_minimal() +
geom_vline(xintercept = c(24, 30, 36, 42, 48, 54, 60), linetype = "dashed", color = "red") +  # Líneas verticales
scale_x_continuous(breaks = seq(9, 18, by = 5)) +  # Ajustar los intervalos de los ticks en el eje x
coord_cartesian(xlim = c(9, 18))
output_file <- file.path("C:/Users/Jennifer Prado/Documents/GitHub/PDB-DIT/Output", "Marcha estable.png")
ggsave(filename = output_file, plot = FUN, width = 10, height = 6, dpi = 300)
CAM <- ggplot(data = baseNinosDITENDES, aes(x = qi478, y = porcentaje_cam))+
geom_point(size = 1, color = "black") +
geom_smooth(method = "loess", se = FALSE, color = "red", size = 1) +  # Línea suavizada
geom_errorbar(aes(ymin = lowerCAM , ymax = uppperCAM  ), width = 0.2, color = "black") +
labs(
title = "Camina solo. Perú 2019-2023",
x = "Edad en meses",
y = "95% CI Marcha estable y autonóma"
) +
theme_minimal() +
geom_vline(xintercept = c(24, 30, 36, 42, 48, 54, 60), linetype = "dashed", color = "red") +  # Líneas verticales
scale_x_continuous(breaks = seq(9, 18, by = 5)) +  # Ajustar los intervalos de los ticks en el eje x
coord_cartesian(xlim = c(9, 18))
output_file <- file.path("C:/Users/Jennifer Prado/Documents/GitHub/PDB-DIT/Output", "Marcha estable.png")
ggsave(filename = output_file, plot =  CAM , width = 10, height = 6, dpi = 300)
baseNinosDITENDES <- baseNinosDITENDES %>%
mutate( desInfEmo = case_when(qi478a == 0 & (qi478 >= 24 & qi478 <= 36) ~ case_when(qi478h9 == 1 ~ 0,
qi478h9 == 2 ~ 1,
qi478h10 == 1 ~ 0,
qi478h10 == 2 ~ 1,
qi478h10 == 3 ~ 0,
qi478h11 == 1 ~ 0,
qi478h11 == 2 ~ 1,
TRUE ~ NA),
qi478a == 0 & (qi478 >= 37 & qi478 <= 54) ~ case_when(qi478i5 == 1 ~ 0,
qi478i5 == 2 ~ 1,
qi478i6 == 1 ~ 0,
qi478i6 == 2 ~ 1,
qi478i6 == 3 ~ 0,
qi478i7 == 1 ~ 0,
qi478i7 == 2 ~ 1,
TRUE ~ NA),
qi478a == 0 & (qi478 >= 55 & qi478 <= 71) ~ case_when(qi478j5 == 1 ~ 0,
qi478j5 == 2 ~ 1,
qi478j6 == 1 ~ 0,
qi478j6 == 2 ~ 1,
qi478j6 == 3 ~ 0,
qi478j7 == 1 ~ 0,
qi478j7 == 2 ~ 1,
TRUE ~ NA),
TRUE ~ NA),
r2conv = case_when(r2 == 0 | r2 == 1 | r2 == 2 ~ 0,## convetir a dummy variables categoricas de apego seguro
r2 == 3 ~ 1,
TRUE ~ NA),
r5conv = case_when(r4_9_12m == 1 | r4_13_18m == 1 | r4_19_23m == 1 | r4_24_36m == 1 ~ 1,
r4_9_12m == 0 | r4_13_18m == 0 | r4_19_23m == 0 | r4_24_36m == 0 ~ 0,
TRUE ~ NA),
h5conv = case_when(qi478h5 == 1 ~ 1,
qi478h5 == 2 ~ 0,
TRUE ~ NA),
h6conv = case_when(qi478h6 == 1 ~ 1,
qi478h6 == 2 ~ 0,
TRUE ~ NA),
h7conv = case_when(qi478h7 == 1 ~ 1,
qi478h7 == 2 ~ 0,
TRUE ~ NA),
h567 = case_when(qi478a == 0 & (qi478 >= 24 & qi478 <= 36) ~ h5conv + h6conv + h7conv,
TRUE ~ NA),
desInfJue = case_when(h567 %in% 0:2 ~ 0,
h567 == 3 ~ 1,
TRUE ~ NA),
i1conv = case_when(qi478i1 == 1 | qi478i1 == 2 | qi478i1 == 3 | qi478i1 == 4  ~ 0, ##Dibujo a detalles
qi478i1 == 5 ~ 1,
TRUE ~ NA),
r7conv = case_when(desInfJue == 1 | i1conv == 1 ~ 1,
desInfJue == 0 | i1conv == 0 ~ 0,
TRUE ~ NA),
r4conv = case_when(e1camina_solo == 1 | f1camina_solo == 1 ~ 1,
e1camina_solo == 0 | f1camina_solo == 1 ~ 0,
TRUE ~ NA))  %>%
group_by(qi478) %>%
mutate(
porcentaje_emociones = mean(desInfEmo, na.rm = TRUE) * 100,
n = n(),
seEMO = sqrt((porcentaje_emociones / 100) * (1 - (porcentaje_emociones / 100)) / n) * 100,
lowerEMO = porcentaje_emociones - 1.96 * seEMO,
upperEMO = porcentaje_emociones + 1.96 * seEMO,
porcentaje_apego = mean(r2conv, na.rm = TRUE) * 100,
n_apego = sum(!is.na(r2conv) & qi478a == 0 & (qi478 >= 9 & qi478 <= 12)),
seAPE = sqrt((porcentaje_apego / 100) * (1 - (porcentaje_apego / 100)) / n_apego) * 100,
lowerAPE = porcentaje_apego - 1.96 * seAPE,
upperAPE = porcentaje_apego + 1.96 * seAPE,
porcentaje_com = mean(r5conv, na.rm = TRUE) * 100,
n_COM = sum(!is.na(r5conv) & qi478a == 0 & (qi478 >= 9 & qi478 <= 36)),
seCOM = sqrt((porcentaje_com  / 100) * (1 - (porcentaje_com  / 100)) / n_COM) * 100,
lowerCOM = porcentaje_com  - 1.96 * seCOM,
upperCOM = porcentaje_com + 1.96 * seCOM,
porcentaje_fun= mean(r7conv, na.rm = TRUE) * 100,
n_FUN = sum(!is.na(r7conv) & qi478a == 0 & (qi478 >= 24 & qi478 <= 55)),
seFUN = sqrt((porcentaje_fun  / 100) * (1 - (porcentaje_fun  / 100)) / n_FUN) * 100,
lowerFUN = porcentaje_fun  - 1.96 * seFUN,
upperFUN = porcentaje_fun + 1.96 * seFUN,
porcentaje_cam= mean(r4conv, na.rm = TRUE) * 100,
n_CAM = sum(!is.na(r4conv) & qi478a == 0 & (qi478 >= 9 & qi478 <= 18)),
seCAM = sqrt((porcentaje_cam  / 100) * (1 - (porcentaje_cam  / 100)) / n_CAM) * 100,
lowerCAM = porcentaje_fun  - 1.96 * seCAM,
upperCAM = porcentaje_fun + 1.96 * seCAM,
) %>%
ungroup()
CAM <- ggplot(data = baseNinosDITENDES, aes(x = qi478, y = porcentaje_cam))+
geom_point(size = 1, color = "black") +
geom_smooth(method = "loess", se = FALSE, color = "red", size = 1) +  # Línea suavizada
geom_errorbar(aes(ymin = lowerCAM , ymax = uppperCAM  ), width = 0.2, color = "black") +
labs(
title = "Camina solo. Perú 2019-2023",
x = "Edad en meses",
y = "95% CI Marcha estable y autonóma"
) +
theme_minimal() +
geom_vline(xintercept = c(24, 30, 36, 42, 48, 54, 60), linetype = "dashed", color = "red") +  # Líneas verticales
scale_x_continuous(breaks = seq(9, 18, by = 5)) +  # Ajustar los intervalos de los ticks en el eje x
coord_cartesian(xlim = c(9, 18))
output_file <- file.path("C:/Users/Jennifer Prado/Documents/GitHub/PDB-DIT/Output", "Marcha estable.png")
ggsave(filename = output_file, plot =  CAM , width = 10, height = 6, dpi = 300)
CAM <- ggplot(data = baseNinosDITENDES, aes(x = qi478, y = porcentaje_cam))+
geom_point(size = 1, color = "black") +
geom_smooth(method = "loess", se = FALSE, color = "red", size = 1) +  # Línea suavizada
geom_errorbar(aes(ymin = lowerCAM , ymax = upperCAM), width = 0.2, color = "black") +
labs(
title = "Camina solo. Perú 2019-2023",
x = "Edad en meses",
y = "95% CI Marcha estable y autonóma"
) +
theme_minimal() +
geom_vline(xintercept = c(24, 30, 36, 42, 48, 54, 60), linetype = "dashed", color = "red") +  # Líneas verticales
scale_x_continuous(breaks = seq(9, 18, by = 5)) +  # Ajustar los intervalos de los ticks en el eje x
coord_cartesian(xlim = c(9, 18))
output_file <- file.path("C:/Users/Jennifer Prado/Documents/GitHub/PDB-DIT/Output", "Marcha estable.png")
ggsave(filename = output_file, plot =  CAM , width = 10, height = 6, dpi = 300)
DCI
ggsave(filename = output_file, plot = DCI, width = 10, height = 6, dpi = 300)
##Calculo de variables
baseNinosDITENDES <- baseNinosDITENDES %>%
mutate( desInfEmo = case_when(qi478a == 0 & (qi478 >= 24 & qi478 <= 36) ~ case_when(qi478h9 == 1 ~ 0,
qi478h9 == 2 ~ 1,
qi478h10 == 1 ~ 0,
qi478h10 == 2 ~ 1,
qi478h10 == 3 ~ 0,
qi478h11 == 1 ~ 0,
qi478h11 == 2 ~ 1,
TRUE ~ NA),
qi478a == 0 & (qi478 >= 37 & qi478 <= 54) ~ case_when(qi478i5 == 1 ~ 0,
qi478i5 == 2 ~ 1,
qi478i6 == 1 ~ 0,
qi478i6 == 2 ~ 1,
qi478i6 == 3 ~ 0,
qi478i7 == 1 ~ 0,
qi478i7 == 2 ~ 1,
TRUE ~ NA),
qi478a == 0 & (qi478 >= 55 & qi478 <= 71) ~ case_when(qi478j5 == 1 ~ 0,
qi478j5 == 2 ~ 1,
qi478j6 == 1 ~ 0,
qi478j6 == 2 ~ 1,
qi478j6 == 3 ~ 0,
qi478j7 == 1 ~ 0,
qi478j7 == 2 ~ 1,
TRUE ~ NA),
TRUE ~ NA),
r2conv = case_when(r2 == 0  ~ 0,## convetir a dummy variables categoricas de apego seguro
r2 == 1 | r2 == 2 | r2 == 3 ~ 1,
TRUE ~ NA),
r5conv = case_when(r4_9_12m == 1 | r4_13_18m == 1 | r4_19_23m == 1 | r4_24_36m == 1 ~ 1,
r4_9_12m == 0 | r4_13_18m == 0 | r4_19_23m == 0 | r4_24_36m == 0 ~ 0,
TRUE ~ NA),
h5conv = case_when(qi478h5 == 1 ~ 1,
qi478h5 == 2 ~ 0,
TRUE ~ NA),
h6conv = case_when(qi478h6 == 1 ~ 1,
qi478h6 == 2 ~ 0,
TRUE ~ NA),
h7conv = case_when(qi478h7 == 1 ~ 1,
qi478h7 == 2 ~ 0,
TRUE ~ NA),
h567 = case_when(qi478a == 0 & (qi478 >= 24 & qi478 <= 36) ~ h5conv + h6conv + h7conv,
TRUE ~ NA),
desInfJue = case_when(h567 %in% 0:2 ~ 0,
h567 == 3 ~ 1,
TRUE ~ NA),
i1conv = case_when(qi478i1 == 1 | qi478i1 == 2 | qi478i1 == 3 | qi478i1 == 4  ~ 0, ##Dibujo a detalles
qi478i1 == 5 ~ 1,
TRUE ~ NA),
r7conv = case_when(desInfJue == 1 | i1conv == 1 ~ 1,
desInfJue == 0 | i1conv == 0 ~ 0,
TRUE ~ NA),
r4conv = case_when(e1camina_solo == 1 | f1camina_solo == 1 ~ 1,
e1camina_solo == 0 | f1camina_solo == 1 ~ 0,
TRUE ~ NA))  %>%
group_by(qi478) %>%
mutate(
porcentaje_emociones = mean(desInfEmo, na.rm = TRUE) * 100,
n = n(),
seEMO = sqrt((porcentaje_emociones / 100) * (1 - (porcentaje_emociones / 100)) / n) * 100,
lowerEMO = porcentaje_emociones - 1.96 * seEMO,
upperEMO = porcentaje_emociones + 1.96 * seEMO,
porcentaje_apego = mean(r2conv, na.rm = TRUE) * 100,
n_apego = sum(!is.na(r2conv) & qi478a == 0 & (qi478 >= 9 & qi478 <= 12)),
seAPE = sqrt((porcentaje_apego / 100) * (1 - (porcentaje_apego / 100)) / n_apego) * 100,
lowerAPE = porcentaje_apego - 1.96 * seAPE,
upperAPE = porcentaje_apego + 1.96 * seAPE,
porcentaje_com = mean(r5conv, na.rm = TRUE) * 100,
n_COM = sum(!is.na(r5conv) & qi478a == 0 & (qi478 >= 9 & qi478 <= 36)),
seCOM = sqrt((porcentaje_com  / 100) * (1 - (porcentaje_com  / 100)) / n_COM) * 100,
lowerCOM = porcentaje_com  - 1.96 * seCOM,
upperCOM = porcentaje_com + 1.96 * seCOM,
porcentaje_fun= mean(r7conv, na.rm = TRUE) * 100,
n_FUN = sum(!is.na(r7conv) & qi478a == 0 & (qi478 >= 24 & qi478 <= 55)),
seFUN = sqrt((porcentaje_fun  / 100) * (1 - (porcentaje_fun  / 100)) / n_FUN) * 100,
lowerFUN = porcentaje_fun  - 1.96 * seFUN,
upperFUN = porcentaje_fun + 1.96 * seFUN,
porcentaje_cam= mean(r4conv, na.rm = TRUE) * 100,
n_CAM = sum(!is.na(r4conv) & qi478a == 0 & (qi478 >= 9 & qi478 <= 18)),
seCAM = sqrt((porcentaje_cam  / 100) * (1 - (porcentaje_cam  / 100)) / n_CAM) * 100,
lowerCAM = porcentaje_fun  - 1.96 * seCAM,
upperCAM = porcentaje_fun + 1.96 * seCAM,
) %>%
ungroup()
apego <- ggplot(data = baseNinosDITENDES, aes(x = qi478, y = porcentaje_apego))+
geom_point(size = 1, color = "black") +
geom_smooth(method = "loess", se = FALSE, color = "red", size = 1) +  # Línea suavizada
geom_errorbar(aes(ymin = lowerAPE, ymax =upperAPE ), width = 0.2, color = "black") +
labs(
title = "Apego seguro según edad. Perú 2019-2023",
x = "Edad en meses",
y = "95% CI Apego seguro"
) +
theme_minimal() +
geom_vline(xintercept = c(6, 12, 18, 24, 30, 36, 42, 48, 54, 60), linetype = "dashed", color = "red") +  # Líneas verticales
scale_x_continuous(breaks = seq(9, 12, by = 1)) +  # Ajustar los intervalos de los ticks en el eje x
coord_cartesian(xlim = c(9, 12))
output_file <- file.path("C:/Users/Jennifer Prado/Documents/GitHub/PDB-DIT/Output", "Precursor del apego seguro.png")
ggsave(filename = output_file, plot = apego, width = 10, height = 6, dpi = 300)
